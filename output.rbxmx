<roblox version="4">
  <Item class="DataModel" referent="0">
    <Properties>
      <string name="Name">Roblox-Battlesystem</string>
    </Properties>
    <Item class="Lighting" referent="1">
      <Properties>
        <string name="Name">Lighting</string>
        <Color3 name="Ambient">
          <R>0</R>
          <G>0</G>
          <B>0</B>
        </Color3>
        <float name="Brightness">2</float>
        <bool name="GlobalShadows">true</bool>
        <bool name="Outlines">false</bool>
        <token name="Technology">1</token>
      </Properties>
    </Item>
    <Item class="ReplicatedStorage" referent="2">
      <Properties>
        <string name="Name">ReplicatedStorage</string>
      </Properties>
      <Item class="ModuleScript" referent="3">
        <Properties>
          <string name="Name">Hello</string>
          <string name="Source"></string>
        </Properties>
      </Item>
      <Item class="Folder" referent="4">
        <Properties>
          <string name="Name">Events</string>
        </Properties>
      </Item>
    </Item>
    <Item class="ServerScriptService" referent="5">
      <Properties>
        <string name="Name">ServerScriptService</string>
      </Properties>
      <Item class="ModuleScript" referent="6">
        <Properties>
          <string name="Name">AttackHitboxes</string>
          <string name="Source"><![CDATA[local module = {}

function module.createHitbox(Character, HitboxSize, Damage, Blockable)
    local Hitbox = Instance.new("Part")
    Hitbox.Transparency = 0.9
    Hitbox.BrickColor = BrickColor.new("Bright red")
    Hitbox.CanCollide = false
    Hitbox.Anchored = true
    Hitbox.Size = HitboxSize
    Hitbox.CFrame = Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
    Hitbox.Parent = workspace

    local PartsInHitbox = workspace:GetPartsInPart(Hitbox)
    local Debounces = {}

    for _, v in PartsInHitbox do
        local Humanoid = v.Parent:FindFirstChild("Humanoid") or v.Parent.Parent:FindFirstChild("Humanoid")
        if Humanoid and Humanoid.Parent ~= Character and not Debounces[Humanoid] then
            Debounces[Humanoid] = true
            if Blockable then
                if not Humanoid.Parent:FindFirstChild("Blocking") then
                    Humanoid.Health = math.max(0, Humanoid.Health - Damage)
                end
            else
                Humanoid.Health = math.max(0, Humanoid.Health - Damage)
            end
        end
    end
   
    task.delay(0.3, function()
        Hitbox:Destroy()
    end)
end

return module ]]></string>
        </Properties>
      </Item>
      <Item class="Script" referent="7">
        <Properties>
          <string name="Name">DataHandler</string>
          <token name="RunContext">0</token>
          <string name="Source">local Players = game:GetService("Players")

Players.PlayerAdded:Connect(function(Player)
    print("Player joined: " .. Player.Name)
    for _,v in script.PlayerValues:GetChildren() do
        v:Clone().Parent = Player
    end
end)</string>
        </Properties>
        <Item class="Folder" referent="8">
          <Properties>
            <string name="Name">PlayerValues</string>
          </Properties>
          <Item class="Folder" referent="9">
            <Properties>
              <string name="Name">Values</string>
            </Properties>
          </Item>
        </Item>
      </Item>
      <Item class="ModuleScript" referent="10">
        <Properties>
          <string name="Name">ProfileManager</string>
          <string name="Source"></string>
        </Properties>
      </Item>
      <Item class="Script" referent="11">
        <Properties>
          <string name="Name">ServerAttackhandler</string>
          <token name="RunContext">0</token>
          <string name="Source">print("ServerAttackhandler loaded properly")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events = ReplicatedStorage.Events

local AttackHitboxes = require(script.Parent.AttackHitboxes)

local ClickAttackDebounces = {}

Events.ClickAttack.OnServerEvent:Connect(function(Player)
    local Character = Player.Character
    if Character == nil then
        return
    end
    local Humanoid = Character:FindFirstChild("Humanoid")
    if Humanoid == nil then
        return
    end
    if Humanoid.Health &lt;= 0 then
        return
    end
    if ClickAttackDebounces[Player] then
        return
    end
    
    ClickAttackDebounces[Player] = true
    local PunchCombo = Player.Values.PunchCombo
    local Animation = script.PunchAnimationCycle[tostring(PunchCombo.Value)]
    local LoadedPunchAnimation = Humanoid.Animator:LoadAnimation(Animation)
    LoadedPunchAnimation:Play()

    if tonumber(PunchCombo.Value) >= #script.PunchAnimationCycle:GetChildren() then
        PunchCombo.Value = 1
    else
        PunchCombo.Value += 1
    end
    
    LoadedPunchAnimation:GetMarkerReachedSignal("Hit"):Connect(function()
        AttackHitboxes.createHitbox(Character, Vector3.new(9, 9, 5), 10, true)
    end)
    

    task.wait(LoadedPunchAnimation.Length + 0.1)
    if ClickAttackDebounces[Player] then
        ClickAttackDebounces[Player] = nil
    end

end)

Events.Block.OnServerEvent:Connect(function(Player, Value)
    local Character = Player.Character
    if Character == nil then
        return
    end
    local Humanoid = Character:FindFirstChild("Humanoid")
    if Humanoid == nil then
        return
    end
    if Humanoid.Health &lt;= 0 then
        return
    end
    if ClickAttackDebounces[Player] then
        return
    end

    if not Value then
        local LoadedAnimations = Humanoid.Animator:GetPlayingAnimationTracks()
        for _, v in LoadedAnimations do
            if v.Name == "Block" then
                v:Stop()
            end
        end
        if Character:FindFirstChild("Blocking") then
            Character.Blocking:Destroy()
        end
    else
        local BlockAnimation = Humanoid.Animator:LoadAnimation(script.Animations.Block)
        BlockAnimation:Play()
        local Blocking = Instance.new("StringValue")
        Blocking.Name = "Blocking"
        Blocking.Parent = Character
    end
end)</string>
        </Properties>
        <Item class="Folder" referent="12">
          <Properties>
            <string name="Name">Animations</string>
          </Properties>
        </Item>
        <Item class="Folder" referent="13">
          <Properties>
            <string name="Name">Characters</string>
          </Properties>
          <Item class="Folder" referent="14">
            <Properties>
              <string name="Name">Hunter</string>
            </Properties>
            <Item class="ModuleScript" referent="15">
              <Properties>
                <string name="Name">1</string>
                <string name="Source">local module = {}

return module</string>
              </Properties>
            </Item>
          </Item>
        </Item>
        <Item class="Folder" referent="16">
          <Properties>
            <string name="Name">PunchAnimationCycle</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="SoundService" referent="17">
      <Properties>
        <string name="Name">SoundService</string>
        <bool name="RespectFilteringEnabled">true</bool>
      </Properties>
    </Item>
    <Item class="StarterPlayer" referent="18">
      <Properties>
        <string name="Name">StarterPlayer</string>
      </Properties>
      <Item class="StarterCharacterScripts" referent="19">
        <Properties>
          <string name="Name">StarterCharacterScripts</string>
        </Properties>
        <Item class="Folder" referent="20">
          <Properties>
            <string name="Name">CharacterAttacks</string>
          </Properties>
        </Item>
        <Item class="Folder" referent="21">
          <Properties>
            <string name="Name">DefaultAttacks</string>
          </Properties>
          <Item class="LocalScript" referent="22">
            <Properties>
              <string name="Name">ClickAttacks</string>
              <string name="Source">local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local Events = ReplicatedStorage:WaitForChild("Events")

local Character = script.Parent.Parent

local IsBlocking = false

UserInputService.InputBegan:Connect(function(Input, GameProcessedEvent)
    if GameProcessedEvent then return end
    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not IsBlocking then
        Events.ClickAttack:FireServer()
        print("Fired ClickAttack event")
    end

    if Input.KeyCode == Enum.KeyCode.F then
        IsBlocking = true
        Events.Block:FireServer(true)
    end
end)
UserInputService.InputEnded:Connect(function(Input, GameProcessedEvent)
    if GameProcessedEvent then return end
    if Input.KeyCode == Enum.KeyCode.F then
        IsBlocking = false
        Events.Block:FireServer(false)
    end
end)</string>
            </Properties>
          </Item>
        </Item>
      </Item>
      <Item class="StarterPlayerScripts" referent="23">
        <Properties>
          <string name="Name">StarterPlayerScripts</string>
        </Properties>
        <Item class="LocalScript" referent="24">
          <Properties>
            <string name="Name">Hey</string>
            <string name="Source"><![CDATA[print("Hello world, from client!")
]]></string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="Workspace" referent="25">
      <Properties>
        <string name="Name">Workspace</string>
        <bool name="FilteringEnabled">true</bool>
        <bool name="NeedsPivotMigration">false</bool>
      </Properties>
      <Item class="Part" referent="26">
        <Properties>
          <string name="Name">Baseplate</string>
          <bool name="Anchored">true</bool>
          <Color3uint8 name="Color3uint8">6512483</Color3uint8>
          <bool name="Locked">true</bool>
          <Vector3 name="Position">
            <X>0</X>
            <Y>-10</Y>
            <Z>0</Z>
          </Vector3>
          <Vector3 name="size">
            <X>512</X>
            <Y>20</Y>
            <Z>512</Z>
          </Vector3>
        </Properties>
      </Item>
    </Item>
  </Item>
</roblox>